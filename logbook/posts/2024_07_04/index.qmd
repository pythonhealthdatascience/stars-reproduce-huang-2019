---
title: "Day 2"
author: "Amy Heather"
date: "2024-07-04"
categories: [setup]
bibliography: ../../../quarto_site/references.bib
---

### Untimed: Set up RStudio and test quarto site with R

I did not time this as it is not specific to this reproduction, but additional set-up as not done reproduction in R yet (since the test-run was conducted in Python).

This involved installing/updating RStudio, learning how to run and work with a quarto book on that platform, and and troubleshooting any issues in getting the quarto book up and running.

This included:

* Updating to the latest version of RStudio, as suggested in the [Quarto docs](https://quarto.org/docs/computations/r.html)
* Installing renv: `install.packages("renv")`
* Setting the working directory: `setwd("~/Documents/stars/stars-reproduce-huang-2019")`
* Initialised an empty R environment: `renv::init(bare=TRUE)`
* Set renv to use explicit dependencies: `renv::settings$snapshot.type("explicit")`
* Created a `DESCRIPTION` file
* Ran `renv::snapshot()` which returned that project is not activated yet, so I selected option to `Activate the project and use the project library`. This generated an `.Rprofile` file.
* I then tried to open the project (`File > Open Project`) but this failed. So I tried `File > New Project > Existing Directory` (which created an `.Rproj` file), then reran `renv::init(bare=TRUE)`, then `renv::snapshot()`, and selected to install packages and then snapshot.
* Synced with GitHub (excluding .Rhistory, which is just a history of executed commands), using Git panel in top right corner
* Add `rmarkdown` to `DESCRIPTION` and rebuilt environment (via `renv::snapshot()` and selecting to install)

Then came across pkgr, and decided to give that a go, following [their tutorial](https://kb.metworx.com/Users/Managing_R_Packages/pkgr-for-development/)...

* Deleted renv and associated files (`.Rprofile` and `renv.lock`) with `renv::deactivate(clean=TRUE)`
* Installed `pkgr` following the instructions on their [latest release](https://github.com/metrumresearchgroup/pkgr/releases/tag/v3.1.1):

```
sudo wget https://github.com/metrumresearchgroup/pkgr/releases/download/v3.1.1/pkgr_3.1.1_linux_amd64.tar.gz -O /tmp/pkgr.tar.gz
sudo tar xzf /tmp/pkgr.tar.gz pkgr
sudo mv pkgr /usr/local/bin/pkgr
sudo chmod +x /usr/local/bin/pkgr
```

* Created a `pkgr.yml` file

```
# Version of pkgr.yml and, at this point, should always say Version: 1
Version: 1

# pkgr will pull dependencies listed in DESCRIPTION
Descriptions:
- DESCRIPTION

# If DESCRIPTION is provided, then this section only needs to include packages
# that you would like to use for development purposes that are not in your
# DESCRIPTION file (i.e. not formal dependencies of your package) - e.g. devtools
# Packages:

# Specify where to pull packages from
# If list CRAN and MPN, will look on CRAN first, then MPN (which is useful for
# dependencies no on CRAN). Can list a location for specific packages in Packages:
Repos:
  - CRAN: https://cran.rstudio.com
  - MPN: https://mpn.metworx.com/snapshots/stable/2022-02-11 # used for mrgval

# Specify Lockfile or Library to tell pkgr where to install packages
# We are using renv to isolate our package environment - renv will tell pkgr where to install them
Lockfile:
  Type: renv
```

* In terminal, ran `pkgr plan`, but get error `ARN[0000] error getting library path from renv: Error in loadNamespace(x) : there is no package called ‘renv’`
  * If I start a new R session and run `packageVersion("renv")`, it returns that it is installed
  * Trying to reinstall with `install.packages("renv")` makes no difference.
  * Tried restarting R and opening a new terminal

I looked through issues and couldn't spot anything, and then realised this was a fairly small package which hadn't had any changes in half a year, so on reflection, probably not a reliable option to choose. So went back to set up similar to before of:

* `renv::init(bare=TRUE)` with explicit snapshot
* `renv::snapshot()` (and realised it didn't update with change to `DESCRIPTION` before simply because I hadn't put a comma after each package!)

To render the Quarto book (in a similar to way to how we did in VSCode), just click the `Render` button.

Now, returning to what started this - trying to get the `.TIFF` supplementary file to display...

* Add `tiff` to `DESCRIPTION`
* `renv::status()` showed that the package was used but not installed, and `renv::snapshot()` with option `2` installed the package
* Add explict versions of R and packages to `DESCRIPTION`
* Attempted to downgrade tiff. `renv::status()` and `renv::snapshot()` did not noticed. From [this issue](https://github.com/rstudio/renv/issues/233), it appears that this should work for `renv::install()` and, indeed, that recognises it although get issue:

```
Warning: failed to find source for 'tiff 0.1.11' in package repositories
Error: failed to retrieve package 'tiff@0.1.11'
```

* I checked the [archive for tiff on CRAN](https://cran.r-project.org/src/contrib/Archive/tiff/) and found there is a 0.1-11 (prior to the current 0.1-12)
* If I deleted it (`remove.packages("tiff")`) and then redid `renv::snapshot()`, it again would not notice the versions
* I tried to do it manually with remotes (rather than devtools as devtools has so many dependencies) - I installed `remotes` and then ran `remotes::install_version("tiff", "0.1.11")`. This seemed successful, except `packageVersion("tiff")` still returned 0.1.12? Although actually, on inspection, you can see it if 0.1.11. However, it wasn't able to do that from DESCRIPTION.
* I removed it and tried again with a direct `renv::install("tiff@0.1-11")` which was successful
* I then tried again with DESCRIPTION, but instead set it to `tiff@0.1-11`, which was successful likewise! And if it was `tiff (==0.1-11)`! So it appears its a bit fussy about matching up to the format in the [CRAN archive .tar.gz](https://cloud.r-project.org/src/contrib/Archive/tiff/) files.
* I then found that `renv::snapshot()` ignores the version if it's `tiff (==0.1-11)` but adheres if it is `tiff@0.1-11` - yay!

Having finished with this experiment, I deleted and rebuilt with latest versions - but found it had errors installing them where defined like `tiff@0.1-12`. Hence, returned to `tiff (==0.1-11)`, and just had to make sure to do `renv::install()` before `renv::snapshot()` (rather than rely on snapshot to install the packages).
