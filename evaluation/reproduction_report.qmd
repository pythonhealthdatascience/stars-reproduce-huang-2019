---
title: "Summary report"
subtitle: "For computational reproducibility assessment of Huang et al. 2019"
format:
  html:
    page-layout: full
echo: False
bibliography: ../quarto_site/references.bib
---

## Study

> Huang S, Maingard J, Kok HK, Barras CD, Thijs V, Chandra RV, Brooks DM and Asadi H. **Optimizing Resources for Endovascular Clot Retrieval for Acute Ischemic Stroke, a Discrete Event Simulation**. *Frontiers in Neurology* 10, 653 (2019). <https://doi.org/10.3389/fneur.2019.00653>.

This is a discrete-event simulation model of an endovascular clot retrieval (ECR) service. ECR is a treatment for acute ischaemic stroke. The model includes the stroke pathway, as well as three other pathways that share resources with the stroke pathway: an elective non-stroke interventional neuroradiology pathway, an emergency interventional radiology pathway, and an elective interventional radiology pathway. The model is created using R Simmer. The paper explores waiting times and resource utilisation - particularly focussing on the biplane angiographic suite (angioINR). A few scenarios are tried to help examine why the wait times are so high for the angioINR. Images from the original study on this page are sourced from @huang_optimizing_2019.

## Computational reproducibility

Successfully reproduced **37.5% (3 out of 8)** of items from the scope in **24h 10m (60.4%)**.

Required troubleshooting:

* **Environment** - identifying and installing required packages (spent some time trying to use estimated versions, but ended up using latest)
* **Extract model code** - was set within code for shiny app
* **Get model parameters** - parameters differed between code and paper
* **Writing code to implement and run scenarios**
* **Writing code to process results and produce figures** - which took a bit of time, since there were several transformations that were complicated or not mentioned
* **Seeds** - introduced as results varied a fair amount between runs

::: {.panel-tabset}

## Figure 2

**Consensus: Not reproduced**

![](../original_study/fig2.jpg){width=49% .lightbox}
![](../reproduction/outputs/fig2.png){width=49% .lightbox}

## Figure 3

**Consensus: Not reproduced**

![](../original_study/fig3.jpg){width=49% .lightbox}
![](../reproduction/outputs/fig3.png){width=49% .lightbox}

## Figure 4

**Consensus: Not reproduced**

![](../original_study/fig4.jpg){width=49% .lightbox}
![](../reproduction/outputs/fig4.png){width=49% .lightbox}

## Figure 5

**Consensus: Successfully reproduced**

![](../original_study/fig5.jpg){width=49% .lightbox}
![](../reproduction/outputs/fig5.png){width=49% .lightbox}

## Supplementary figure

**Consensus: Not reproduced**

![](../original_study/supp.jpg){width=49% .lightbox}
![](../reproduction/outputs/supplementary_figure.png){width=49% .lightbox}

## In-text result 1

**Consensus: Successfully reproduced**

"Exclusive-Use Scenario. In this scenario, the overall wait time probability at angioINR was reduced compared to baseline (red line in Figure 2B compared to Figure 2A). This represents a **decrease in ECR patient wait time for angioINR by an average of 6 min**." @huang_optimizing_2019

Reproduction:

```{python}
import pandas as pd

txt12 = pd.read_csv('../reproduction/outputs/txt2.csv')
txt12[txt12['scenario'].isin(['Baseline', 'Exclusive use'])]
```

## In-text result 2

**Consensus: Successfully reproduced**

"Two angioINRs Scenario. This scenario simulates the effect a facility upgrade to two biplane angiographic suites, but without additional staff changes. The wait time probability at angioINR was reduced compared to baseline (Figure 2C). The reduction represents an **average of 4 min less in queue for angioINR**." @huang_optimizing_2019

Reproduction:

```{python}
pd.read_csv('../reproduction/outputs/txt2.csv')
txt12[txt12['scenario'].isin(['Baseline', 'Two AngioINRs'])]
```

## In-text result 3

**Consensus: Not reproduced**

"Extended Schedule Scenario. The wait time probability at angioINR in the exclusive- use scenario was further reduced by extended work hours (Figure 3B). In contrast, work extension did not affect baseline or the 2 angioINRs scenario (Figures 3A,C). For the baseline scenario, 1 and 2 h of extra work resulted in an **average wait time of 1.7 and 0.9 min reduction, respectively**. For the 2 angioINRs scenario, 1 and 2 h of extra work resulted in an **average wait time gain of 1 and 0.3 min, respectively**." @huang_optimizing_2019

Reproduction:

```{python}
txt3 = pd.read_csv('../reproduction/outputs/txt3.csv')
txt3[txt3['scenario'].isin(['Baseline', 'Two AngioINRs'])]
```

:::

## Evaluation against guidelines

```{python}
import pandas as pd
import plotly.express as px

# Create dataframe of results
col = ['fully', 'partially', 'not', 'na']
eval_dict = {
  'STARS (essential)': [2, 0, 6, 0],
  'STARS (optional)': [2, 0, 3, 0],
  'Badges (criteria)': [3, 0, 9, 0],
  'Badges (badges)': [0, 0, 12, 0],
  'STRESS-DES': [14, 6, 3, 1],
  'ISPOR-SDM': [7, 2, 7, 2]
}
eval_wide = pd.DataFrame(eval_dict, index=col).T
eval = (eval_wide
        .melt(ignore_index=False)
        .reset_index()
        .rename(columns={'index': 'guideline',
                         'variable': 'result',
                         'value': 'count'}))

# Add percentages
eval['total'] = eval['count'].groupby(eval['guideline']).transform('sum')
eval['percent'] = eval['count'] / eval['total']
eval['percentage'] = round(eval['percent']*100, 1).astype(str) + '%'

# Create stacked bar visualisation
fig = px.bar(
  eval,
  x='percent',
  y='guideline',
  color='result',
  color_discrete_map={'fully': '#06a94d',
                      'partially': '#ffd68c',
                      'not': '#ff9999',
                      'na': '#d1dcea'},
  orientation='h',
  hover_data={
    'count': True,
    'percent': False,
    'percentage': True,
    'guideline': False,
    'result': False})
  
# Amend x axis label and ticks
fig.update_layout(xaxis = dict(
  range=[0,1],
  tickmode='array',
  tickvals=[0, 0.2, 0.4, 0.6, 0.8, 1],
  ticktext=['0%', '20%', '40%', '60%', '80%', '100%'],
  title=''))

# Amend y axis label and order, and add space between ticks and plot
fig.update_layout(yaxis=dict(
  autorange='reversed',
  title=''))
fig.update_yaxes(ticksuffix = '  ')

# Relabel legend
fig.update_layout(legend_title_text='Result')
newnames = {'fully': 'Fully met', 'partially': 'Partially met',
            'not': 'Not met', 'na': 'Not applicable'}
fig.for_each_trace(lambda t: t.update(name = newnames[t.name]))

# Show without toolbar
fig.show(config={'displayModeBar': False})
```

<sup>Context: The original study repository was evaluated against criteria from journal badges relating to how open and reproducible the model is and against guidance for sharing artefacts from the STARS framework. The original study article and supplementary materials (excluding code) were evaluated against reporting guidelines for DES models: STRESS-DES, and guidelines adapted from ISPOR-SDM.</sup>
